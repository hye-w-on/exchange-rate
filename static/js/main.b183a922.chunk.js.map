{"version":3,"sources":["component/ExchangeRate/CountryList.js","component/ExchangeRate/ExchangeRatePage.js","App.js","reportWebVitals.js","index.js"],"names":["CountryList","cur_unit","curruncyName","curruncySign","emoji","countryName","Option","Select","ExchangeRatePage","useState","exchangeRate","setExchangeRate","exchangeRateList","setExchangeRateList","country","setCountry","rateEdit","setRateEdit","foreignCurrency","setForeignCurrency","krw","setKrw","today","setToday","columns","title","dataIndex","width","key","render","netChange","color","CaretDownOutlined","CaretUpOutlined","useEffect","inputDate","moment","dayToday","day","ddate","d1date","clone","subtract","ddateStr","format","d1dateStr","neweExchangeList","Axios","get","then","exchangeList","preExchangeList","i","data","length","deal_bas_r","replace","toFixed","Object","assign","alert","exchangeObj","filter","row","cur_nm","split","push","splice","indexOf","className","size","bordered","value","onChange","date","isBefore","counrty","map","index","allowClear","id","type","e","target","disabled","onClick","current","htmlFor","substring","prefix","suffix","SwapOutlined","dataSource","scroll","y","pagination","defaultPageSize","position","onRow","record","rowIndex","exchange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b183a922.chunk.js","sourcesContent":["let CountryList = [\n  {\n    cur_unit: \"KRW\",\n    curruncyName: \"원\",\n    curruncySign: \"￦\",\n    emoji: \"🇰🇷\",\n  },\n  {\n    countryName: \"미국\",\n    cur_unit: \"USD\",\n    curruncyName: \"달러\",\n    curruncySign: \"$\",\n    emoji: \"🇺🇸\",\n  },\n  {\n    cur_unit: \"EUR\",\n    curruncyName: \"유로\",\n    curruncySign: \"€\",\n    emoji: \"🇪🇺\",\n  },\n  {\n    cur_unit: \"CNH\",\n    curruncyName: \"위안\",\n    curruncySign: \"¥\",\n    emoji: \"🇨🇳\",\n  },\n  {\n    cur_unit: \"JPY(100)\",\n    curruncyName: \"엔\",\n    curruncySign: \"¥\",\n    emoji: \"🇯🇵\",\n  },\n];\n\nexport default CountryList;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\n\nimport CountryList from \"./CountryList\";\nimport \"./ExchangeRate.css\";\nimport { Button, Input, Select, Table, Tag, DatePicker } from \"antd\";\nimport {\n  CaretDownOutlined,\n  CaretUpOutlined,\n  SwapOutlined,\n} from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nfunction ExchangeRatePage() {\n  const [exchangeRate, setExchangeRate] = useState();\n  const [exchangeRateList, setExchangeRateList] = useState([]);\n  const [country, setCountry] = useState(CountryList[1]);\n  const [rateEdit, setRateEdit] = useState(false);\n  const [foreignCurrency, setForeignCurrency] = useState(0);\n  const [krw, setKrw] = useState(0);\n  const [today, setToday] = useState();\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"emoji\",\n      width: \"40px\",\n    },\n    {\n      title: \"국가\",\n      key: \"countryName\",\n      dataIndex: \"countryName\",\n    },\n    {\n      title: \"통화명\",\n      key: \"curruncyName\",\n      dataIndex: \"curruncyName\",\n    },\n    {\n      title: \"통화코드\",\n      dataIndex: \"cur_unit\",\n    },\n    {\n      title: \"매매 기준율\",\n      dataIndex: \"deal_bas_r\",\n    },\n    {\n      title: \"전일대비\",\n      key: \"netChange\",\n      dataIndex: \"netChange\",\n      render: (netChange, curruncyName) => (\n        <div>\n          {netChange < 0 ? (\n            <Tag color=\"red\" key={curruncyName}>\n              <CaretDownOutlined /> {netChange}\n            </Tag>\n          ) : (\n            <Tag color=\"blue\" key={curruncyName}>\n              <CaretUpOutlined /> {netChange}\n            </Tag>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    let inputDate = moment(today);\n    let dayToday = inputDate.day(); //일 0, 월 1, 토 6\n    let ddate = inputDate;\n    let d1date = inputDate;\n    if (dayToday === 6) {\n      //ddate = new Date(today.getTime());\n      // ddate = new Date(ddate.setDate(ddate.getDate() - 1));\n      ddate = inputDate.clone().subtract(1, \"days\");\n      d1date = inputDate.clone().subtract(2, \"days\");\n    } else if (dayToday === 0) {\n      ddate = inputDate.clone().subtract(2, \"days\");\n      d1date = inputDate.clone().subtract(3, \"days\");\n    } else if (dayToday === 1) {\n      ddate = inputDate;\n      d1date = inputDate.clone().subtract(3, \"days\");\n    } else {\n      ddate = inputDate;\n      d1date = inputDate.clone().subtract(1, \"days\");\n    }\n\n    let ddateStr = ddate.format(\"YYYYMMDD\");\n    let d1dateStr = d1date.format(\"YYYYMMDD\");\n    /* ddate.getFullYear().toString() +\n      (ddate.getMonth() + 1).toString() +\n      ddate.getDate().toString();*/\n    let neweExchangeList = [];\n    Axios.get(\n      \"https://rhv2mfccrf.execute-api.ap-northeast-2.amazonaws.com/prod/exchange/\" +\n        ddateStr\n    ).then((exchangeList) => {\n      Axios.get(\n        \"https://rhv2mfccrf.execute-api.ap-northeast-2.amazonaws.com/prod/exchange/\" +\n          d1dateStr\n      ).then((preExchangeList) => {\n        //netChange 계산\n        for (let i = 0; i < exchangeList.data.length; i++) {\n          if (\n            preExchangeList.data[i].cur_unit === exchangeList.data[i].cur_unit\n          ) {\n            let netChange = (\n              preExchangeList.data[i].deal_bas_r.replace(/,/g, \"\") -\n              exchangeList.data[i].deal_bas_r.replace(/,/g, \"\")\n            ).toFixed(2);\n            Object.assign(exchangeList.data[i], { netChange: netChange });\n          } else {\n            alert(\"netChange error\");\n          }\n        }\n        //Country join\n        let key = -1;\n        for (let country of CountryList) {\n          let exchangeObj = exchangeList.data.filter(\n            (row) => row.cur_unit === country.cur_unit\n          );\n          if (exchangeObj.length !== 0) {\n            key = key + 1;\n            let cur_nm = exchangeObj[0].cur_nm.split(\" \");\n            if (cur_nm[0] === \"위안화\") {\n              cur_nm[0] = \"중국\";\n              cur_nm[1] = \"위안\";\n            }\n            if (cur_nm[0] === \"유로\") {\n              cur_nm[0] = \"유럽연합\";\n              cur_nm[1] = \"유로\";\n            }\n            let exchangeRate = {\n              key: key,\n              countryName: cur_nm[0],\n              curruncyName: cur_nm[1],\n            };\n            Object.assign(exchangeRate, country, exchangeObj[0]);\n            neweExchangeList.push(exchangeRate);\n            exchangeList.data.splice(\n              exchangeList.data.indexOf(exchangeObj[0]),\n              1\n            );\n          }\n        }\n        //Others\n        for (let data of exchangeList.data) {\n          key = key + 1;\n          let cur_nm = data.cur_nm.split(\" \");\n          let exchangeRate = {\n            key: key,\n            countryName: cur_nm[0],\n            curruncyName: cur_nm[1],\n          };\n          Object.assign(exchangeRate, data);\n          neweExchangeList.push(exchangeRate);\n        }\n        setExchangeRateList(neweExchangeList);\n      });\n    });\n  }, [today]);\n\n  const onSelectCurruncy = (value) => {\n    //antd 문법\n    let counrty = exchangeRateList[value];\n    setCountry(counrty);\n    setExchangeRate(counrty.deal_bas_r.replace(/,/g, \"\"));\n  };\n\n  const onChangeExchangeRate = (e) => {\n    setExchangeRate(e.target.value);\n  };\n\n  const onChangeRateEdit = (e) => {\n    setRateEdit((current) => !current);\n  };\n\n  const onChangeForeignCurrency = (e) => {\n    setForeignCurrency(e.target.value);\n    setKrw(e.target.value * exchangeRate);\n  };\n  const onChangeKRW = (e) => {\n    setKrw(e.target.value);\n    setForeignCurrency(e.target.value / exchangeRate);\n  };\n  const onChangeToday = (date) => {\n    if (moment().isBefore(date) || date === null) {\n      alert(\"오늘 날짜보다 이전 날짜만 조회할 수 있습니다.\");\n      setToday(moment());\n      return;\n    }\n    setToday(date);\n  };\n  return (\n    <div className=\"exchange-container\">\n      <div className=\"exchange-form\">\n        <div className=\"datepicker\">\n          <DatePicker\n            size=\"large\"\n            bordered={false}\n            value={today}\n            onChange={onChangeToday}\n          />\n        </div>\n        <div className=\"exchange-edit\">\n          <Select\n            className=\"exchange-select\"\n            value={country.countryName}\n            onChange={onSelectCurruncy}\n          >\n            {exchangeRateList.map((country, index) => (\n              <Option key={country.countryName} value={index}>\n                {country.countryName}\n              </Option>\n            ))}\n          </Select>\n          <Input\n            className=\"exchange-input\"\n            allowClear\n            id=\"exchangeRate\"\n            value={exchangeRate}\n            type=\"number\"\n            onChange={onChangeExchangeRate}\n            disabled={!rateEdit}\n          />\n          <Button\n            className=\"exchange-button\"\n            onClick={onChangeRateEdit}\n            type={rateEdit ? \"\" : \"primary\"}\n          >\n            {rateEdit ? \"취소\" : \"편집\"}\n          </Button>\n        </div>\n        <div className=\"result-edit\">\n          <label htmlFor=\"currency\">\n            {country.cur_unit.length > 3\n              ? country.cur_unit.substring(0, 3)\n              : country.cur_unit}\n          </label>\n          <Input\n            allowClear\n            id=\"currency\"\n            value={foreignCurrency}\n            type=\"number\"\n            onChange={onChangeForeignCurrency}\n            prefix={country.curruncySign}\n            suffix={country.curruncyName}\n          />\n        </div>\n        <SwapOutlined className=\"swap-icon\" />\n        <div className=\"result-edit\">\n          <label htmlFor=\"krw\">KRW</label>\n          <Input\n            allowClear\n            id=\"krw\"\n            value={krw}\n            type=\"number\"\n            onChange={onChangeKRW}\n            prefix=\"￦\"\n            suffix=\"원\"\n          />\n        </div>\n        <Table\n          className=\"exchange-table\"\n          columns={columns}\n          dataSource={exchangeRateList}\n          size=\"middle\"\n          scroll={{ y: \"500px\" }}\n          pagination={{ defaultPageSize: 50, position: [\"none\", \"none\"] }}\n          onRow={(record, rowIndex) => {\n            return {\n              onClick: () => {\n                let exchange = record.deal_bas_r.replace(/,/g, \"\");\n                setExchangeRate(exchange);\n                setCountry(record);\n              },\n            };\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ExchangeRatePage;\n","import ExchangeRatePage from \"./component/ExchangeRate/ExchangeRatePage.js\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ExchangeRatePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}