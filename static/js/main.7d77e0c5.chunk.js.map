{"version":3,"sources":["component/ExchangeRate/CountryList.js","component/ExchangeRate/ExchangeRatePage.js","App.js","reportWebVitals.js","index.js"],"names":["CountryList","cur_unit","curruncyName","curruncySign","emoji","countryName","Option","Select","ExchangeRatePage","useState","exchangeRate","setExchangeRate","exchangeRateList","setExchangeRateList","country","setCountry","rateEdit","setRateEdit","foreignCurrency","setForeignCurrency","krw","setKrw","columns","title","dataIndex","key","render","netChange","color","CaretDownOutlined","CaretUpOutlined","useEffect","neweExchangeList","Axios","get","then","exchangeList","preExchangeList","i","data","length","deal_bas_r","replace","toFixed","Object","assign","alert","exchangeObj","filter","row","cur_nm","split","push","splice","indexOf","className","value","onChange","counrty","style","width","map","index","allowClear","margin","id","type","e","target","disabled","onClick","current","htmlFor","prefix","suffix","dataSource","size","scroll","y","pagination","defaultPageSize","position","onRow","record","rowIndex","exchange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d77e0c5.chunk.js","sourcesContent":["let CountryList = [\n  {\n    cur_unit: \"KRW\",\n    curruncyName: \"원\",\n    curruncySign: \"￦\",\n    emoji: \"🇰🇷\",\n  },\n  {\n    countryName: \"미국\",\n    cur_unit: \"USD\",\n    curruncyName: \"달러\",\n    curruncySign: \"$\",\n    emoji: \"🇺🇸\",\n  },\n  {\n    cur_unit: \"EUR\",\n    curruncyName: \"유로\",\n    curruncySign: \"€\",\n    emoji: \"🇪🇺\",\n  },\n  {\n    cur_unit: \"CNH\",\n    curruncyName: \"위안\",\n    curruncySign: \"¥\",\n    emoji: \"🇨🇳\",\n  },\n  {\n    cur_unit: \"JPY(100)\",\n    curruncyName: \"엔\",\n    curruncySign: \"¥\",\n    emoji: \"🇯🇵\",\n  },\n];\n\nexport default CountryList;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Button, Input, Select, Table, Tag } from \"antd\";\nimport CountryList from \"./CountryList\";\nimport \"./ExchangeRate.css\";\nimport { CaretDownOutlined, CaretUpOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nfunction ExchangeRatePage() {\n  const [exchangeRate, setExchangeRate] = useState(1100);\n  const [exchangeRateList, setExchangeRateList] = useState([]);\n  const [country, setCountry] = useState(CountryList[1]);\n  const [rateEdit, setRateEdit] = useState(false);\n  const [foreignCurrency, setForeignCurrency] = useState(0);\n  const [krw, setKrw] = useState(0);\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"emoji\",\n    },\n    {\n      title: \"국가\",\n      key: \"countryName\",\n      dataIndex: \"countryName\",\n    },\n    {\n      title: \"통화명\",\n      key: \"curruncyName\",\n      dataIndex: \"curruncyName\",\n    },\n    {\n      title: \"통화코드\",\n      dataIndex: \"cur_unit\",\n    },\n    {\n      title: \"매매 기준율\",\n      dataIndex: \"deal_bas_r\",\n    },\n    {\n      title: \"전일대비\",\n      key: \"netChange\",\n      dataIndex: \"netChange\",\n      render: (netChange, curruncyName) => (\n        <div>\n          {netChange < 0 ? (\n            <Tag color=\"red\" key={curruncyName}>\n              <CaretDownOutlined /> {netChange}\n            </Tag>\n          ) : (\n            <Tag color=\"blue\" key={curruncyName}>\n              <CaretUpOutlined /> {netChange}\n            </Tag>\n          )}\n        </div>\n      ),\n    },\n  ];\n  let data = [];\n\n  useEffect(() => {\n    let neweExchangeList = [];\n    Axios.get(\n      \"https://rhv2mfccrf.execute-api.ap-northeast-2.amazonaws.com/prod/exchange/20211208\"\n    ).then((exchangeList) => {\n      Axios.get(\n        \"https://rhv2mfccrf.execute-api.ap-northeast-2.amazonaws.com/prod/exchange/20211207\"\n      ).then((preExchangeList) => {\n        //netChange 계산\n        for (let i = 0; i < exchangeList.data.length; i++) {\n          if (\n            preExchangeList.data[i].cur_unit == exchangeList.data[i].cur_unit\n          ) {\n            let netChange = (\n              preExchangeList.data[i].deal_bas_r.replace(/\\,/g, \"\") -\n              exchangeList.data[i].deal_bas_r.replace(/\\,/g, \"\")\n            ).toFixed(2);\n            Object.assign(exchangeList.data[i], { netChange: netChange });\n          } else {\n            alert(\"netChange error\");\n          }\n        }\n        //Country join\n        let key = -1;\n\n        for (let country of CountryList) {\n          let exchangeObj = exchangeList.data.filter(\n            (row) => row.cur_unit == country.cur_unit\n          );\n          key = key + 1;\n          let cur_nm = exchangeObj[0].cur_nm.split(\" \");\n          if (cur_nm[0] == \"위안화\") {\n            cur_nm[0] = \"중국\";\n            cur_nm[1] = \"위안\";\n          }\n          if (cur_nm[0] == \"유로\") {\n            cur_nm[0] = \"유럽연합\";\n            cur_nm[1] = \"유로\";\n          }\n          let exchangeRate = {\n            key: key,\n            countryName: cur_nm[0],\n            curruncyName: cur_nm[1],\n          };\n          Object.assign(exchangeRate, country, exchangeObj[0]);\n          neweExchangeList.push(exchangeRate);\n          exchangeList.data.splice(\n            exchangeList.data.indexOf(exchangeObj[0]),\n            1\n          );\n        }\n        //Others\n        for (let data of exchangeList.data) {\n          key = key + 1;\n          let cur_nm = data.cur_nm.split(\" \");\n          let exchangeRate = {\n            key: key,\n            countryName: cur_nm[0],\n            curruncyName: cur_nm[1],\n          };\n          Object.assign(exchangeRate, data);\n          neweExchangeList.push(exchangeRate);\n        }\n        setExchangeRateList(neweExchangeList);\n      });\n    });\n  }, []);\n\n  const onSelectCurruncy = (value) => {\n    //antd 문법\n    let counrty = exchangeRateList[value];\n    setCountry(counrty);\n    setExchangeRate(counrty.deal_bas_r.replace(/\\,/g, \"\"));\n  };\n\n  const onChangeExchangeRate = (e) => {\n    setExchangeRate(e.target.value);\n  };\n  const onChangeRateEdit = (e) => {\n    setRateEdit((current) => !current);\n    if (rateEdit) {\n      setExchangeRate(1200);\n    }\n  };\n  const onChangeForeignCurrency = (e) => {\n    setForeignCurrency(e.target.value);\n    setKrw(e.target.value * exchangeRate);\n  };\n  const onChangeKRW = (e) => {\n    setKrw(e.target.value);\n    setForeignCurrency(e.target.value / exchangeRate);\n  };\n  return (\n    <div className=\"exchange-container\">\n      <div className=\"exchange-form\">\n        <br />\n        <div className=\"exchangerate-edit\">\n          <Select\n            value={country.countryName}\n            onChange={onSelectCurruncy}\n            style={{ width: \"100px\" }}\n          >\n            {exchangeRateList.map((country, index) => (\n              <Option key={country.countryName} value={index}>\n                {country.countryName}\n              </Option>\n            ))}\n          </Select>\n          <Input\n            allowClear\n            style={{ width: \"100%\", margin: \"5px\" }}\n            id=\"exchangeRate\"\n            value={exchangeRate}\n            type=\"number\"\n            onChange={onChangeExchangeRate}\n            disabled={!rateEdit}\n          />\n          <Button onClick={onChangeRateEdit} type={rateEdit ? \"\" : \"primary\"}>\n            {rateEdit ? \"취소\" : \"편집\"}\n          </Button>\n        </div>\n        <label htmlFor=\"currency\">{country.cur_unit}</label>\n        <Input\n          allowClear\n          id=\"currency\"\n          value={foreignCurrency}\n          type=\"number\"\n          onChange={onChangeForeignCurrency}\n          prefix={country.curruncySign}\n          suffix={country.curruncyName}\n        />\n        <label htmlFor=\"krw\">KRW</label>\n        <Input\n          allowClear\n          id=\"krw\"\n          value={krw}\n          type=\"number\"\n          onChange={onChangeKRW}\n          prefix=\"￦\"\n          suffix=\"원\"\n        />\n      </div>\n      <Table\n        columns={columns}\n        dataSource={exchangeRateList}\n        size=\"middle\"\n        scroll={{ y: \"500px\" }}\n        style={{ width: \"500px\" }}\n        pagination={{ defaultPageSize: 50, position: [\"none\", \"none\"] }}\n        onRow={(record, rowIndex) => {\n          return {\n            onClick: () => {\n              let exchange = record.deal_bas_r.replace(/\\,/g, \"\");\n              setExchangeRate(exchange);\n              setCountry(record);\n            },\n          };\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ExchangeRatePage;\n","import ExchangeRatePage from \"./component/ExchangeRate/ExchangeRatePage.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ExchangeRatePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}